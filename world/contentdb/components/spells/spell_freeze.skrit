//////////////////////////////////////////////////////////////////////////////
//
// File     :  spell_freeze.skrit
// Author(s):  Eric Tams
//
// Copyright © 2000 Gas Powered Games, Inc.  All rights reserved.
//----------------------------------------------------------------------------
//  $Revision:: $              $Date:$
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////

property string effect_script$		= ""	doc = "Name of the SiegeFx script that will be providing the visual.";
property string effect_params$		= ""   	doc = "Parameters to send to SiegeFx script";
property string description$		= ""	doc = "Description of enchantment being applied";
property string state_name$			= ""	doc = "Name of effect to use as a generic state and as a screen name.";

owner = GoSkritComponent;

Goid caster$;
Goid target$;
goid go_hit$;
float spell_duration$;
			
startup state CastBegin$
{
 	event OnGoHandleMessage$( eWorldEvent e$, WorldMessage msg$ )
	{
		if( e$ == WE_REQ_CAST ) {
			target$ = MakeGoid( msg$.GetData1() );
			caster$ = msg$.GetSendFrom();

			if( target$.isvalid && caster$.isvalid )
			{
				// Start the visual
				SiegeFx.SRunScript( effect_script$, target$, caster$, effect_params$, owner.Goid, e$ );
			}
		} else if ( e$ == WE_SPELL_COLLISION ) {
			go_hit$ = msg$.SendFrom;
			
			spell_duration$ = owner.Go.Magic.EvaluateEffectDuration(go_hit$, caster$);
			if (go_hit$.IsValid)
			{
				if(go_hit$.Go.HasMind() && !go_hit$.Go.Actor.HasGenericState( state_name$ ) )
				{
					// add cool box effect
					go_hit$.Go.Aspect.AspectHandle.SetInstanceAttrFlags(2048);
					
					// stop moving
					go_hit$.Go.Aspect.AspectHandle.DisableUpdate();
					
					//turn off brain so he wont try to attack any more.
					Job Hit_Job$ = go_hit$.Go.Mind.GetFrontJob( JQ_ACTION );
					MCPManager.MakeRequest( Hit_Job$.Id, go_hit$, PL_FACE );
					go_hit$.Go.Mind.Clear();
					MCPManager.Flush(go_hit$);
					
					// Add the effected state so this can only happen once
					go_hit$.Go.Actor.AddGenericState( state_name$, state_name$, description$, spell_duration$, caster$ );
					
					SetState Frozen$;
					return;
				}
			}
			SetState Finish$;
		}
	}
}
	
state Frozen$
{
	trigger OnTimer$( 1 )
	{
		if (go_hit$.IsValid)
		{
			go_hit$.Go.Aspect.AspectHandle.ClearInstanceAttrFlags(2048);
			go_hit$.Go.Aspect.AspectHandle.EnableUpdate();
			go_hit$.Go.Mind.SDoJob( MakeJobReq( JAT_BRAIN, JQ_BRAIN, QP_CLEAR, JO_REFLEX ));
			
			// remove the state so this can be affected again
			go_hit$.Go.Actor.RemoveGenericState( state_name$ );
		}
		
		SetState Finish$;
	}
	event OnEnterState$
	{
		this.CreateTimer( 1, spell_duration$ );
	}
}


state Finish$
{
	event OnEnterState$
	{
		SiegeFx.ClearVariables( owner.goid );
		
		PostWorldMessage( WE_REQ_DELETE, owner.Goid, 1 );
	}
}



