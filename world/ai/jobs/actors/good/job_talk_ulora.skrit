/*
  ============================================================================
  ----------------------------------------------------------------------------

	File		: 	job_talk.skrit

	Author(s)	: 	Bartosz Kijanka

	Purpose		: 	Just stand there and talk at anyone we're told to.

	(C)opyright 2000 Gas Powered Games, Inc.

  ----------------------------------------------------------------------------
  ============================================================================
*/

Go			m_Go$;
GoMind		m_Mind$;
GoBody  	m_Body$;
Job			m_Job$;
Goid		m_Target$;

startup state STARTUP$
{
}

////////////////////////////////////////////////////////////////////////////////
//  helper function.

////////////////////////////////////////
//	TryAnim

bool TryAnim$( int FourCC$ )
{
	int Anim$ = m_Go$.Aspect.AspectHandle.GetSubAnimForChoreFourCC(CHORE_MISC,FourCC$);
		
	if (Anim$ >= 0)
	{
		eReqRetCode ret$ = MCPManager.MakeRequest( m_Job$.Id, m_Go$.Goid, PL_PLAYANIM, CHORE_MISC, Anim$, 0 );
		return true;	
	}
	return false;
}


////////////////////////////////////////////////////////////////////////////////
//	init
event OnJobInitPointers$( Job job$ )
{
	m_Job$		= job$;
	m_Go$		= job$.Go;
	m_Mind$		= job$.Go.Mind;
	m_Body$		= job$.Go.Body;
}


event OnJobInit$( Job job$ )
{
	OnJobInitPointers$( job$ );

	m_Target$	= job$.GoalObject;

	SetState Face$;
}

////////////////////////////////////////////////////////////////////////////////
//	face the audience
state Face$
{
	transition
	{
		-> Talk$:	OnWorldMessage( WE_MCP_FACING_LOCKEDON );
	}

	event OnEnterState$
	{
		if( !m_Go$.HasConversation )
		{
			report.errorf( "Actor '%s', scid:0x%08x was told to run job_talk but he doesn't have a conversation component.",
							m_Go$.GetTemplateName,
							m_Go$.Goid );
			SetState Exiting$;
		}
		MCPManager.MakeRequest( m_Job$.Id, m_Go$.Goid, PL_FACE, m_Target$ );
	}
}


////////////////////////////////////////////////////////////////////////////////
//	blab blab away... pretend you're Lee
state Talk$
{
	transition
	{
		-> Exiting$:	OnWorldMessage( WE_REQ_TALK_END ) =
		{
			eAnimStance stance$ = m_Go$.inventory.animstance;
			int subanim$ = m_Go$.Aspect.AspectHandle.NumSubAnimsForChoreAndStance(CHORE_FIDGET,stance$);
			subanim$ = Math.RandomInt(0, Math.MaxInt( 0, subanim$-1 ) ) ;
			MCPManager.MakeRequest( m_Job$.Id, m_Go$.Goid, PL_FIDGET, subanim$);
		}
		-> Exiting$:	OnWorldMessage( WE_ANIM_DONE ) =
		{
			eAnimStance stance$ = m_Go$.inventory.animstance;
			int subanim$ = m_Go$.Aspect.AspectHandle.NumSubAnimsForChoreAndStance(CHORE_FIDGET,stance$);
			subanim$ = Math.RandomInt(0, Math.MaxInt( 0, subanim$-1 ) ) ;
			MCPManager.MakeRequest( m_Job$.Id, m_Go$.Goid, PL_FIDGET, subanim$);
		}
		
	}

	event OnEnterState$
	{
		// $$$ read/write variables from the Game Auditor here, and bring up the appropriate dialogs...
		m_Go$.GetConversation.SelectConversation( "conversation_ulora_join" );

		if ( GameAuditor.GetDb.GetBool( "party_accept_0x6000050" ) ) {
			m_Go$.GetConversation.SelectConversation( "conversation_ulora_accept" );
			GameAuditor.GetDb.SetBool( "party_accept_0x6000050", false );
			MCPManager.Flush(m_Go$.Goid);
			TryAnim$('wyme');
		} else if ( GameAuditor.GetDb.GetBool( "party_decline_0x6000050" ) ) {
			m_Go$.GetConversation.SelectConversation( "conversation_ulora_reject" );
			GameAuditor.GetDb.SetBool( "party_decline_0x6000050", false );
			GameAuditor.GetDb.SetBool( "party_allow_rejoin_0x6000050", true );
			MCPManager.Flush(m_Go$.Goid);
			TryAnim$('wyme');
		} else if ( GameAuditor.GetDb.GetBool( "party_disband_0x6000050" ) ) {
			m_Go$.GetConversation.SelectConversation( "conversation_ulora_disband" );
			GameAuditor.GetDb.SetBool( "party_disband_0x6000050", false );
			GameAuditor.GetDb.SetBool( "party_disbanded_0x6000050", true );
			MCPManager.Flush(m_Go$.Goid);
			TryAnim$('wyme');
		} else if ( GameAuditor.GetDb.GetBool( "party_allow_rejoin_0x6000050" ) ) {
			m_Go$.GetConversation.SelectConversation( "conversation_ulora_rejoin" );
			GameAuditor.GetDb.SetBool( "party_allow_rejoin_0x6000050", false );
			MCPManager.Flush(m_Go$.Goid);
			TryAnim$('wyme');
		} else if ( GameAuditor.GetDb.GetBool( "party_disbanded_0x6000050" ) ) {
			m_Go$.GetConversation.SelectConversation( "conversation_ulora_rejoin" );
			GameAuditor.GetDb.SetBool( "party_disbanded_0x6000050", false );
			MCPManager.Flush(m_Go$.Goid);
			TryAnim$('wyme');
		} else {
			TryAnim$('ulo1');
		}
		m_Go$.GetConversation.ActivateDialogue();
	}
}


////////////////////////////////////////////////////////////////////////////////
//	finish blabbing
state Exiting$
{
	event OnEnterState$
	{
		// $$$ close up any dialogs here...

		// Send a PL_FACE reguest without a target so that they no longer
		// continue to face the character they were talking to
		MCPManager.MakeRequest( m_Job$.Id, m_Go$.Goid, PL_FACE );

		m_Job$.MarkForDeletion( true );
	}
}


