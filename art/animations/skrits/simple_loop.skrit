// Animation Skrit: Simple_Loop
//
// This skrit send no messages so it safe to call in the front end
// or a default_chore
//
// History:
//		VERSION 1.0:	Initial implementation
//

property int MAJORVERSION$ = 1;
property int MINORVERSION$ = 0;

owner = Aspect;

/////////////////////////////////////////////////////////////////////////////
// Utilities

/////////////////////////////////////////////////////////////////////////////
// States

//----------------------------

startup state Startup$ 
{
	event OnStartChore$ ( int /*subanim$*/, int /*flags$*/ )
	{
		SetState Looper$;
	}
}

state Looper$ {

	event OnEnterState$
	{
		owner.GetCurrentActiveChore().ResetTimeWarp();

		int bg$ = owner.GetCurrentActiveChore().OpenBlendGroup();
		owner.GetCurrentActiveChore().AddAnimToBlendGroup(0,1);
		owner.GetCurrentActiveChore().CloseBlendGroup();
		owner.GetCurrentActiveChore().SetBlendGroupWeight(bg$,1);
		owner.UpdateTimeline(0);
	}

	event OnUpdate$( float delta_t$, float /* speed_bias$ */)
	{
 	 	int events$ = owner.UpdateTimeline(delta_t$);

		if (AnimEventBitTest(events$,ANIMEVENT_FINISH))
		{
			SetState Looper$;
		}

	}
	
	event OnStartChore$ ( int /*subanim$*/, int /*flags$*/ )
	{
		SetState Looper$;
	}

}
